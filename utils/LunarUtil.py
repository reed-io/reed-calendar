# -*- coding: utf-8 -*-


class LunarUtil:
    """+
    农历工具
    """

    BASE_MONTH_ZHI_INDEX = 2
    GAN = ("", "甲", "乙", "丙", "丁", "戊", "己", "庚", "辛", "壬", "癸")
    ZHI = ("", "子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥")
    NUMBER = ("〇", "一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二")
    MONTH = ("", "正", "二", "三", "四", "五", "六", "七", "八", "九", "十", "冬", "腊")
    SEASON = ("", "孟春", "仲春", "季春", "孟夏", "仲夏", "季夏", "孟秋", "仲秋", "季秋", "孟冬", "仲冬", "季冬")
    SHENGXIAO = ("", "鼠", "牛", "虎", "兔", "龙", "蛇", "马", "羊", "猴", "鸡", "狗", "猪")
    DAY = ("", "初一", "初二", "初三", "初四", "初五", "初六", "初七", "初八", "初九", "初十", "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十", "廿一", "廿二", "廿三", "廿四", "廿五", "廿六", "廿七", "廿八", "廿九", "三十")
    FESTIVAL = {
        "1-1": "春节",
        "1-15": "元宵节",
        "2-2": "龙头节",
        "5-5": "端午节",
        "7-7": "七夕节",
        "8-15": "中秋节",
        "9-9": "重阳节",
        "12-8": "腊八节"
    }

    OTHER_FESTIVAL = {
        "1-4": ["接神日"],
        "1-5": ["隔开日"],
        "1-7": ["人日"],
        "1-8": ["谷日", "顺星节"],
        "1-9": ["天日"],
        "1-10": ["地日"],
        "1-20": ["天穿节"],
        "1-25": ["填仓节"],
        "1-30": ["正月晦"],
        "2-1": ["中和节"],
        "2-2": ["社日节"],
        "3-3": ["上巳节"],
        "5-20": ["分龙节"],
        "5-25": ["会龙节"],
        "6-6": ["天贶节"],
        "6-24": ["观莲节"],
        "6-25": ["五谷母节"],
        "7-14": ["中元节"],
        "7-22": ["财神节"],
        "7-29": ["地藏节"],
        "8-1": ["天灸日"],
        "10-1": ["寒衣节"],
        "10-10": ["十成节"],
        "10-15": ["下元节"],
        "12-7": ["驱傩日"],
        "12-16": ["尾牙"],
        "12-24": ["祭灶日"]
    }

    def __init__(self):
        pass

    @staticmethod
    def getTimeZhiIndex(hm):
        """
        获取HH:mm时刻的地支序号，非法的时刻返回0
        :param hm: HH:mm时刻
        :return: 地支序号，0到11
        """
        if hm is None:
            return 0
        if len(hm) > 5:
            hm = hm[0:5]
        x = 1
        for i in range(1, 22, 2):
            if (("0" if i < 10 else "") + str(i) + ":00") <= hm <= (("0" if i + 1 < 10 else "") + str(i + 1) + ":59"):
                return x
            x += 1
        return 0

    @staticmethod
    def convertTime(hm):
        """
        将HH:mm时刻转换为时辰（地支），非法的时刻返回子
        :param hm: HH:mm时刻
        :return: 时辰(地支)，如子
        """
        return LunarUtil.ZHI[LunarUtil.getTimeZhiIndex(hm) + 1]

    @staticmethod
    def __hex(n):
        """
        数字转十六进制
        :param n: 数字
        :return: 十六进制
        """
        s = hex(n).replace("0x", "").upper()
        if len(s) < 2:
            s = "0" + s
        return s
